#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18010
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Vakio.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="vakiodb")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertPelit(Pelit instance);
    partial void UpdatePelit(Pelit instance);
    partial void DeletePelit(Pelit instance);
    partial void InsertVeikkaukset(Veikkaukset instance);
    partial void UpdateVeikkaukset(Veikkaukset instance);
    partial void DeleteVeikkaukset(Veikkaukset instance);
    partial void InsertNakkilista(Nakkilista instance);
    partial void UpdateNakkilista(Nakkilista instance);
    partial void DeleteNakkilista(Nakkilista instance);
    partial void InsertShout(Shout instance);
    partial void UpdateShout(Shout instance);
    partial void DeleteShout(Shout instance);
    partial void InsertVoitto(Voitto instance);
    partial void UpdateVoitto(Voitto instance);
    partial void DeleteVoitto(Voitto instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["vakiodbConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Pelit> Pelits
		{
			get
			{
				return this.GetTable<Pelit>();
			}
		}
		
		public System.Data.Linq.Table<Veikkaukset> Veikkauksets
		{
			get
			{
				return this.GetTable<Veikkaukset>();
			}
		}
		
		public System.Data.Linq.Table<Nakkilista> Nakkilistas
		{
			get
			{
				return this.GetTable<Nakkilista>();
			}
		}
		
		public System.Data.Linq.Table<Shout> Shouts
		{
			get
			{
				return this.GetTable<Shout>();
			}
		}
		
		public System.Data.Linq.Table<Voitto> Voittos
		{
			get
			{
				return this.GetTable<Voitto>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Username;
		
		private string _Password;
		
		private EntitySet<Veikkaukset> _Veikkauksets;
		
		private EntitySet<Nakkilista> _Nakkilistas;
		
		private EntitySet<Shout> _Shouts;
		
		private EntitySet<Voitto> _Voittos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public User()
		{
			this._Veikkauksets = new EntitySet<Veikkaukset>(new Action<Veikkaukset>(this.attach_Veikkauksets), new Action<Veikkaukset>(this.detach_Veikkauksets));
			this._Nakkilistas = new EntitySet<Nakkilista>(new Action<Nakkilista>(this.attach_Nakkilistas), new Action<Nakkilista>(this.detach_Nakkilistas));
			this._Shouts = new EntitySet<Shout>(new Action<Shout>(this.attach_Shouts), new Action<Shout>(this.detach_Shouts));
			this._Voittos = new EntitySet<Voitto>(new Action<Voitto>(this.attach_Voittos), new Action<Voitto>(this.detach_Voittos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Veikkaukset", Storage="_Veikkauksets", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<Veikkaukset> Veikkauksets
		{
			get
			{
				return this._Veikkauksets;
			}
			set
			{
				this._Veikkauksets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Nakkilista", Storage="_Nakkilistas", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<Nakkilista> Nakkilistas
		{
			get
			{
				return this._Nakkilistas;
			}
			set
			{
				this._Nakkilistas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Shout", Storage="_Shouts", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<Shout> Shouts
		{
			get
			{
				return this._Shouts;
			}
			set
			{
				this._Shouts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Voitto", Storage="_Voittos", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<Voitto> Voittos
		{
			get
			{
				return this._Voittos;
			}
			set
			{
				this._Voittos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Veikkauksets(Veikkaukset entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Veikkauksets(Veikkaukset entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Nakkilistas(Nakkilista entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Nakkilistas(Nakkilista entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Shouts(Shout entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Shouts(Shout entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Voittos(Voitto entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Voittos(Voitto entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pelit")]
	public partial class Pelit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Joukkueet;
		
		private int _Viikko;
		
		private int _Numero;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnJoukkueetChanging(string value);
    partial void OnJoukkueetChanged();
    partial void OnViikkoChanging(int value);
    partial void OnViikkoChanged();
    partial void OnNumeroChanging(int value);
    partial void OnNumeroChanged();
    #endregion
		
		public Pelit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Joukkueet", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Joukkueet
		{
			get
			{
				return this._Joukkueet;
			}
			set
			{
				if ((this._Joukkueet != value))
				{
					this.OnJoukkueetChanging(value);
					this.SendPropertyChanging();
					this._Joukkueet = value;
					this.SendPropertyChanged("Joukkueet");
					this.OnJoukkueetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Viikko", DbType="Int NOT NULL")]
		public int Viikko
		{
			get
			{
				return this._Viikko;
			}
			set
			{
				if ((this._Viikko != value))
				{
					this.OnViikkoChanging(value);
					this.SendPropertyChanging();
					this._Viikko = value;
					this.SendPropertyChanged("Viikko");
					this.OnViikkoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero", DbType="Int NOT NULL")]
		public int Numero
		{
			get
			{
				return this._Numero;
			}
			set
			{
				if ((this._Numero != value))
				{
					this.OnNumeroChanging(value);
					this.SendPropertyChanging();
					this._Numero = value;
					this.SendPropertyChanged("Numero");
					this.OnNumeroChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Veikkaukset")]
	public partial class Veikkaukset : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserId;
		
		private int _Peli1;
		
		private int _Peli2;
		
		private int _Peli3;
		
		private int _Peli4;
		
		private int _Peli5;
		
		private int _Peli6;
		
		private int _Peli7;
		
		private int _Peli8;
		
		private int _Peli9;
		
		private int _Peli10;
		
		private int _Peli11;
		
		private int _Peli12;
		
		private int _Peli13;
		
		private bool _MasterPlan;
		
		private int _Osumia;
		
		private int _Viikko;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnPeli1Changing(int value);
    partial void OnPeli1Changed();
    partial void OnPeli2Changing(int value);
    partial void OnPeli2Changed();
    partial void OnPeli3Changing(int value);
    partial void OnPeli3Changed();
    partial void OnPeli4Changing(int value);
    partial void OnPeli4Changed();
    partial void OnPeli5Changing(int value);
    partial void OnPeli5Changed();
    partial void OnPeli6Changing(int value);
    partial void OnPeli6Changed();
    partial void OnPeli7Changing(int value);
    partial void OnPeli7Changed();
    partial void OnPeli8Changing(int value);
    partial void OnPeli8Changed();
    partial void OnPeli9Changing(int value);
    partial void OnPeli9Changed();
    partial void OnPeli10Changing(int value);
    partial void OnPeli10Changed();
    partial void OnPeli11Changing(int value);
    partial void OnPeli11Changed();
    partial void OnPeli12Changing(int value);
    partial void OnPeli12Changed();
    partial void OnPeli13Changing(int value);
    partial void OnPeli13Changed();
    partial void OnMasterPlanChanging(bool value);
    partial void OnMasterPlanChanged();
    partial void OnOsumiaChanging(int value);
    partial void OnOsumiaChanged();
    partial void OnViikkoChanging(int value);
    partial void OnViikkoChanged();
    #endregion
		
		public Veikkaukset()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Peli1", DbType="Int NOT NULL")]
		public int Peli1
		{
			get
			{
				return this._Peli1;
			}
			set
			{
				if ((this._Peli1 != value))
				{
					this.OnPeli1Changing(value);
					this.SendPropertyChanging();
					this._Peli1 = value;
					this.SendPropertyChanged("Peli1");
					this.OnPeli1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Peli2", DbType="Int NOT NULL")]
		public int Peli2
		{
			get
			{
				return this._Peli2;
			}
			set
			{
				if ((this._Peli2 != value))
				{
					this.OnPeli2Changing(value);
					this.SendPropertyChanging();
					this._Peli2 = value;
					this.SendPropertyChanged("Peli2");
					this.OnPeli2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Peli3", DbType="Int NOT NULL")]
		public int Peli3
		{
			get
			{
				return this._Peli3;
			}
			set
			{
				if ((this._Peli3 != value))
				{
					this.OnPeli3Changing(value);
					this.SendPropertyChanging();
					this._Peli3 = value;
					this.SendPropertyChanged("Peli3");
					this.OnPeli3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Peli4", DbType="Int NOT NULL")]
		public int Peli4
		{
			get
			{
				return this._Peli4;
			}
			set
			{
				if ((this._Peli4 != value))
				{
					this.OnPeli4Changing(value);
					this.SendPropertyChanging();
					this._Peli4 = value;
					this.SendPropertyChanged("Peli4");
					this.OnPeli4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Peli5", DbType="Int NOT NULL")]
		public int Peli5
		{
			get
			{
				return this._Peli5;
			}
			set
			{
				if ((this._Peli5 != value))
				{
					this.OnPeli5Changing(value);
					this.SendPropertyChanging();
					this._Peli5 = value;
					this.SendPropertyChanged("Peli5");
					this.OnPeli5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Peli6", DbType="Int NOT NULL")]
		public int Peli6
		{
			get
			{
				return this._Peli6;
			}
			set
			{
				if ((this._Peli6 != value))
				{
					this.OnPeli6Changing(value);
					this.SendPropertyChanging();
					this._Peli6 = value;
					this.SendPropertyChanged("Peli6");
					this.OnPeli6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Peli7", DbType="Int NOT NULL")]
		public int Peli7
		{
			get
			{
				return this._Peli7;
			}
			set
			{
				if ((this._Peli7 != value))
				{
					this.OnPeli7Changing(value);
					this.SendPropertyChanging();
					this._Peli7 = value;
					this.SendPropertyChanged("Peli7");
					this.OnPeli7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Peli8", DbType="Int NOT NULL")]
		public int Peli8
		{
			get
			{
				return this._Peli8;
			}
			set
			{
				if ((this._Peli8 != value))
				{
					this.OnPeli8Changing(value);
					this.SendPropertyChanging();
					this._Peli8 = value;
					this.SendPropertyChanged("Peli8");
					this.OnPeli8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Peli9", DbType="Int NOT NULL")]
		public int Peli9
		{
			get
			{
				return this._Peli9;
			}
			set
			{
				if ((this._Peli9 != value))
				{
					this.OnPeli9Changing(value);
					this.SendPropertyChanging();
					this._Peli9 = value;
					this.SendPropertyChanged("Peli9");
					this.OnPeli9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Peli10", DbType="Int NOT NULL")]
		public int Peli10
		{
			get
			{
				return this._Peli10;
			}
			set
			{
				if ((this._Peli10 != value))
				{
					this.OnPeli10Changing(value);
					this.SendPropertyChanging();
					this._Peli10 = value;
					this.SendPropertyChanged("Peli10");
					this.OnPeli10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Peli11", DbType="Int NOT NULL")]
		public int Peli11
		{
			get
			{
				return this._Peli11;
			}
			set
			{
				if ((this._Peli11 != value))
				{
					this.OnPeli11Changing(value);
					this.SendPropertyChanging();
					this._Peli11 = value;
					this.SendPropertyChanged("Peli11");
					this.OnPeli11Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Peli12", DbType="Int NOT NULL")]
		public int Peli12
		{
			get
			{
				return this._Peli12;
			}
			set
			{
				if ((this._Peli12 != value))
				{
					this.OnPeli12Changing(value);
					this.SendPropertyChanging();
					this._Peli12 = value;
					this.SendPropertyChanged("Peli12");
					this.OnPeli12Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Peli13", DbType="Int NOT NULL")]
		public int Peli13
		{
			get
			{
				return this._Peli13;
			}
			set
			{
				if ((this._Peli13 != value))
				{
					this.OnPeli13Changing(value);
					this.SendPropertyChanging();
					this._Peli13 = value;
					this.SendPropertyChanged("Peli13");
					this.OnPeli13Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MasterPlan", DbType="Bit NOT NULL")]
		public bool MasterPlan
		{
			get
			{
				return this._MasterPlan;
			}
			set
			{
				if ((this._MasterPlan != value))
				{
					this.OnMasterPlanChanging(value);
					this.SendPropertyChanging();
					this._MasterPlan = value;
					this.SendPropertyChanged("MasterPlan");
					this.OnMasterPlanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Osumia", DbType="Int NOT NULL")]
		public int Osumia
		{
			get
			{
				return this._Osumia;
			}
			set
			{
				if ((this._Osumia != value))
				{
					this.OnOsumiaChanging(value);
					this.SendPropertyChanging();
					this._Osumia = value;
					this.SendPropertyChanged("Osumia");
					this.OnOsumiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Viikko", DbType="Int NOT NULL")]
		public int Viikko
		{
			get
			{
				return this._Viikko;
			}
			set
			{
				if ((this._Viikko != value))
				{
					this.OnViikkoChanging(value);
					this.SendPropertyChanging();
					this._Viikko = value;
					this.SendPropertyChanged("Viikko");
					this.OnViikkoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Veikkaukset", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Veikkauksets.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Veikkauksets.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Nakkilista")]
	public partial class Nakkilista : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserId;
		
		private int _Viikko;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnViikkoChanging(int value);
    partial void OnViikkoChanged();
    #endregion
		
		public Nakkilista()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Viikko", DbType="Int NOT NULL")]
		public int Viikko
		{
			get
			{
				return this._Viikko;
			}
			set
			{
				if ((this._Viikko != value))
				{
					this.OnViikkoChanging(value);
					this.SendPropertyChanging();
					this._Viikko = value;
					this.SendPropertyChanged("Viikko");
					this.OnViikkoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Nakkilista", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Nakkilistas.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Nakkilistas.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Shout")]
	public partial class Shout : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Kommentti;
		
		private int _CreatedBy;
		
		private System.DateTime _Created;
		
		private System.Nullable<int> _Viikko;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnKommenttiChanging(string value);
    partial void OnKommenttiChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnViikkoChanging(System.Nullable<int> value);
    partial void OnViikkoChanged();
    #endregion
		
		public Shout()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kommentti", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Kommentti
		{
			get
			{
				return this._Kommentti;
			}
			set
			{
				if ((this._Kommentti != value))
				{
					this.OnKommenttiChanging(value);
					this.SendPropertyChanging();
					this._Kommentti = value;
					this.SendPropertyChanged("Kommentti");
					this.OnKommenttiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Viikko", DbType="Int")]
		public System.Nullable<int> Viikko
		{
			get
			{
				return this._Viikko;
			}
			set
			{
				if ((this._Viikko != value))
				{
					this.OnViikkoChanging(value);
					this.SendPropertyChanging();
					this._Viikko = value;
					this.SendPropertyChanged("Viikko");
					this.OnViikkoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Shout", Storage="_User", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Shouts.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Shouts.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Voitto")]
	public partial class Voitto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserId;
		
		private decimal _Voitto1;
		
		private int _Viikko;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnVoitto1Changing(decimal value);
    partial void OnVoitto1Changed();
    partial void OnViikkoChanging(int value);
    partial void OnViikkoChanged();
    #endregion
		
		public Voitto()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Voitto", Storage="_Voitto1", DbType="Decimal(18,0) NOT NULL")]
		public decimal Voitto1
		{
			get
			{
				return this._Voitto1;
			}
			set
			{
				if ((this._Voitto1 != value))
				{
					this.OnVoitto1Changing(value);
					this.SendPropertyChanging();
					this._Voitto1 = value;
					this.SendPropertyChanged("Voitto1");
					this.OnVoitto1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Viikko", DbType="Int NOT NULL")]
		public int Viikko
		{
			get
			{
				return this._Viikko;
			}
			set
			{
				if ((this._Viikko != value))
				{
					this.OnViikkoChanging(value);
					this.SendPropertyChanging();
					this._Viikko = value;
					this.SendPropertyChanged("Viikko");
					this.OnViikkoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Voitto", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Voittos.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Voittos.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
